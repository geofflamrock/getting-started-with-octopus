step "deploy-kubernetes-yaml" {
    name = "Deploy Kubernetes YAML"
    properties = {
        Octopus.Action.TargetRoles = "k8s"
    }

    action {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.GitRepository.FilePathFilters = "test/*"
            Octopus.Action.GitRepository.Source = "External"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.Kubernetes.ServerSideApply.Enabled = "False"
            Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "False"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "test/*"
            Octopus.Action.KubernetesContainers.Namespace = "#{Kubernetes.Namespace}"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }

        git_dependencies {
            default_branch = "main"
            file_path_filters = ["test/*"]
            git_credential_id = "GitCredentials-1"
            git_credential_type = "Library"
            repository_uri = "https://github.com/OctopusDeploy/k8s-samples"
        }

        packages "getting-started-with-octopus" {
            acquisition_location = "NotAcquired"
            feed = "ghcr-io"
            package_id = "geofflamrock/getting-started-with-octopus"
            properties = {
                Extract = "False"
                Purpose = "DockerImageReference"
                SelectionMode = "immediate"
            }
        }
    }
}